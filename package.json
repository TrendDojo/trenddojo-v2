{
  "name": "trenddojo",
  "version": "0.4.0",
  "private": true,
  "scripts": {
    "dev": "next dev --port 3011",
    "dev:turbo": "next dev --turbopack --port 3011",
    "build": "npx prisma generate && next build",
    "vercel-build": "bash scripts/vercel-build.sh",
    "migrate:setup": "node scripts/secure-migrate.js --setup",
    "migrate:run": "node scripts/secure-migrate.js --migrate",
    "postinstall": "npx prisma generate",
    "start": "next start",
    "lint": "eslint",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:e2e": "playwright test",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev --name",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:migrate:staging": "dotenv -e .env.staging -- prisma migrate deploy",
    "db:migrate:production": "dotenv -e .env.production -- prisma migrate deploy",
    "db:studio": "prisma studio",
    "db:studio:staging": "dotenv -e .env.staging -- prisma studio",
    "db:seed": "tsx prisma/seed.ts",
    "db:seed:empty": "tsx prisma/seed.ts --type empty",
    "db:seed:dev": "tsx prisma/seed.ts --type dev",
    "db:seed:demo": "tsx prisma/seed.ts --type demo",
    "db:seed:test": "tsx prisma/seed.ts --type test",
    "db:seed:staging": "dotenv -e .env.staging -- tsx prisma/seed.ts --type staging",
    "db:reset": "prisma migrate reset --force && npm run db:seed:dev",
    "db:status": "prisma migrate status",
    "test:alpaca": "node scripts/test-secure-alpaca.js",
    "db:status:staging": "dotenv -e .env.staging -- prisma migrate status",
    "db:status:production": "dotenv -e .env.production -- prisma migrate status",
    "typecheck": "tsc --noEmit",
    "pre-push": "npm run typecheck && npm run build",
    "pre-deploy": "./scripts/pre-deploy-check.sh",
    "deploy-safe": "npm run pre-deploy && echo 'Ready to deploy!'",
    "build:verify": "npx prisma generate && npm run build && echo 'âœ… Build verification passed'",
    "validate:env": "./scripts/validate-environment.sh",
    "validate:migrations": "./scripts/validate-migrations.sh",
    "validate:api": "./scripts/validate-api.sh",
    "validate:all": "npm run validate:env && npm run validate:migrations && npm run validate:api",
    "health:check": "curl -s http://localhost:3011/api/health | jq '.'",
    "deploy:preview": "git push origin dev",
    "deploy:production": "git checkout main && git merge dev && git push origin main",
    "verify:preview": "./scripts/deployment/verify-preview.sh",
    "wait:deployment": "./scripts/deployment/wait-for-deployment.sh",
    "get:preview:url": "./scripts/deployment/get-preview-url.sh",
    "preview:url": "echo 'https://trenddojo-v2-git-dev-traderclicks.vercel.app'",
    "preview:open": "open https://trenddojo-v2-git-dev-traderclicks.vercel.app",
    "preview:check": "./scripts/deployment/verify-preview.sh https://trenddojo-v2-git-dev-traderclicks.vercel.app",
    "deploy:preview:auto": "git push origin dev && npm run wait:deployment",
    "deploy:full": "npm run deploy-safe && npm run deploy:preview:auto",
    "prisma:generate": "npx prisma generate",
    "db:dev": "node scripts/deployment/db-deploy-dev.js",
    "db:staging": "node scripts/deployment/db-deploy-staging.js",
    "db:prod": "node scripts/deployment/db-deploy-prod.js",
    "import-data": "tsx scripts/import-market-data.ts import",
    "market-stats": "tsx scripts/import-market-data.ts stats",
    "market-backup": "tsx scripts/import-market-data.ts backup",
    "market-vacuum": "tsx scripts/import-market-data.ts vacuum",
    "polygon-download": "tsx scripts/polygon-download.ts",
    "polygon-2h": "tsx scripts/polygon-download-2h.ts",
    "migrate-to-postgres": "tsx scripts/market-data/migrate-to-postgres.ts",
    "cache:updater": "tsx src/lib/market-data/cache/cache-updater.ts",
    "cache:update-once": "tsx src/lib/market-data/cache/cache-updater.ts --once",
    "cache:status": "curl http://localhost:3011/api/market-data/cache-status",
    "theme:scan": "./scripts/theme-compliance-scanner.sh",
    "audit": "./scripts/theme-compliance-scanner.sh",
    "data:sync": "./scripts/sync-production-data.sh",
    "data:sync:full": "./scripts/sync-production-data.sh --full",
    "data:sync:daily": "./scripts/sync-production-data.sh",
    "market:test": "tsx scripts/test-market-sync.ts",
    "market:sync": "curl -X POST http://localhost:3002/api/cron/market-data-sync",
    "market:sync:prod": "curl -X POST https://www.trenddojo.com/api/cron/market-data-sync -H 'Authorization: Bearer $CRON_SECRET'",
    "test:cron": "tsx scripts/test-cron-sync.ts",
    "alpaca:test": "tsx scripts/test-alpaca-trade.ts"
  },
  "dependencies": {
    "@alpacahq/alpaca-trade-api": "^3.1.3",
    "@auth/prisma-adapter": "^2.10.0",
    "@prisma/client": "^6.15.0",
    "@radix-ui/react-slot": "^1.2.3",
    "@tanstack/react-query": "^5.85.6",
    "@trpc/client": "^11.5.0",
    "@trpc/next": "^11.5.0",
    "@trpc/react-query": "^11.5.0",
    "@trpc/server": "^11.5.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/nodemailer": "^7.0.1",
    "autoprefixer": "^10.4.20",
    "bcryptjs": "^3.0.2",
    "better-sqlite3": "^12.4.1",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "csv-parse": "^6.1.0",
    "date-fns": "^4.1.0",
    "eslint": "^9",
    "eslint-config-next": "15.5.2",
    "framer-motion": "^12.23.12",
    "gray-matter": "^4.0.3",
    "lightweight-charts": "^5.0.8",
    "lucide-react": "^0.542.0",
    "next": "15.5.2",
    "next-auth": "^4.24.11",
    "next-mdx-remote": "^5.0.0",
    "nodemailer": "^6.10.1",
    "prisma": "^6.15.0",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "superjson": "^2.2.2",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.4.0",
    "zod": "^4.1.5",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@playwright/test": "^1.55.0",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@types/better-sqlite3": "^7.6.13",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@vitejs/plugin-react": "^5.0.2",
    "dotenv-cli": "^10.0.0",
    "jsdom": "^26.1.0",
    "msw": "^2.11.1",
    "tsx": "^4.20.5",
    "typescript": "^5",
    "vitest": "^3.2.4"
  }
}
